// Class automatically generated by Dev-C++ New Class wizard

#ifndef TRANSFORMATIONINTERPOLATOR_H
#define TRANSFORMATIONINTERPOLATOR_H

#include "transformationcontroller.h" // inheriting class's header file
#include "engine3d/geometry/parametriccurve.h"

namespace engine3d {
    /**
     * No description
     */
    class TransformationInterpolator : public TransformationController
    {
    	public:
    		/**
    		 * Creates a new transformation interpolator that acts 
             * fron startTime to endTime. The period defines the time
             * during which the parameter value for trajectory changes from
             * minimum allowed value to maximum allowed value. If
             * endTime is < startTime the movement is infinite. Otherwise 
             * the movement is repeated only period / (endTime - startTime) 
             * times.
    		 **/
    		TransformationInterpolator(const Scene& rScene, double startTime, double endTime, double period);
    		// class destructor
    		~TransformationInterpolator();
    		/**
    		 * Defines the trajectory which is used for 
    		 * interpolating translation
    		 **/
    		void SetTrajectory(ParametricCurve* pTrajectory);
    		/**
    		 * Calculates and realizes transformation for the 
             * given time moment.
    		 **/
    		void Execute();
    	protected:
            ParametricCurve* mpTrajectory;
            double mStartTime;
            double mEndTime;
            double mPeriod;
    };
}
#endif // TRANSFORMATIONINTERPOLATOR_H
