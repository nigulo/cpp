// Class automatically generated by Dev-C++ New Class wizard

#ifndef VERTEX_H
#define VERTEX_H

//#include <vector> // class's header file
#include "engine3d/geometry/vector.h" // class's header file
#include "shape.h" // class's header file
#include "engine3d/attributes/color.h" // class's header file

using namespace base;

namespace engine3d {

/*
 * The class containing vertex attributes
 */
class Vertex : public Node
{
	public:
		Vertex();
		Vertex(double x, double y, double z);
		Vertex(const Vector& v);
		Vertex(const Vertex& v);
		/**
		 * Creates a vertex using all parameters of other
		 * vertex except for the coordinates which are taken
		 * from the specified vector
		 **/
		Vertex(const Vertex& vertex, const Vector& vect);

		virtual Vertex* Clone() const;
		~Vertex();
		void Init();
		void Render();
		// Sets vertex color
		void SetColor(const Color& c);
		void SetCoords(const Vector& coords);
		void SetCoords(double x, double y, double z);
		void SetTexCoords(const Vector& texCoords);
		void SetTexCoords(double s, double t);
		const Color* GetColor() const {return mpColor;};
		double GetCoord(int index) const {return (mCoords)[index];}
		const Vector& GetCoords() const {return mCoords;}
		const Vector* GetTexCoords() const {return mpTexCoords;}
		/**
		 * Overrides Node::GetCenter
		 * @returns the world coordinates of this vertex
		 **/
		//Vector GetCenter() const;
	protected:
        Color* mpColor;
        Vector mCoords;
        Vector* mpTexCoords;
};
}
#endif // VERTEX_H
