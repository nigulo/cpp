// Class automatically generated by Dev-C++ New Class wizard

#include <GL/gl.h>

#include "vertex.h"

using namespace engine3d;

Vertex::Vertex() : coords(0, 0, 0)
{
    color = nullptr;
    texCoords = nullptr;
}

Vertex::Vertex(double x, double y, double z) : coords(x, y, z)
{
    color = nullptr;
    texCoords = nullptr;
}

Vertex::Vertex(const Vector& v) : coords(v) {
    color = nullptr;
    texCoords = nullptr;
}

Vertex::Vertex(const Vertex& v) : coords(v.coords) {
    color = nullptr;
    texCoords = nullptr;
    if (v.texCoords) {
        texCoords = new Vector(*v.texCoords);
    }
    if (v.color) {
        color = new Color(v.color->red, v.color->green, v.color->blue, v.color->alpha);
    }
}

Vertex::Vertex(const Vertex& vertex, const Vector& vect) : coords(vect) {
    color = nullptr;
    texCoords = nullptr;
    if (vertex.texCoords) {
        texCoords = new Vector(*vertex.texCoords);
    }
    if (vertex.color) {
        color = new Color(vertex.color->red, vertex.color->green, vertex.color->blue, vertex.color->alpha);
    }
}

Vertex* Vertex::Clone() const
{
    Debug("Vertex.Clone");
    return new Vertex(*this);
}

// class destructor
Vertex::~Vertex()
{
    if (texCoords) {
        delete texCoords;
    }
    if (color) {
        delete color;
    }
}

void Vertex::SetColor(const Color& c)
{
    if (color) {
        delete color;
    }
    color = new Color(c.red, c.green, c.blue, c.alpha);
}

void Vertex::SetCoords(const Vector& coords)
{
    assert(coords.GetDim() == 3);
    this->coords = coords;
}

void Vertex::SetCoords(double x, double y, double z)
{
    this->coords = Vector(x, y, z);
}

void Vertex::SetTexCoords(const Vector& texCoords)
{
    assert(texCoords.GetDim() == 2);
    SetTexCoords(texCoords[0], texCoords[1]);
}

void Vertex::SetTexCoords(double s, double t)
{
    //Debug("set tex coords");
    if (texCoords) {
        //Debug("set tex coords0");
        delete texCoords;
    }
    //Debug("set tex coords1");
    if (s < 0.0f) {
        s = 0.0f;
    }
    if (t < 0.0f) {
        t = 0.0f;
    }
    if (s > 1.0f) {
        s = 1.0f;
    }
    if (t > 1.0f) {
        t = 1.0f;
    }
    //Debug("set tex coords2");
    this->texCoords = new Vector(s, t);
    //Debug("set tex coords3");
}

void Vertex::Init()
{
    //long millis = GetMillis();
    Node::Init();
    //Debug(String("Vertex::Init took ") + (GetMillis() - millis));
}

void Vertex::Render()
{
    //long millis = GetMillis();
    Node::Render();
    if (color) {
        glColor4d(color->red, color->green, color->blue, color->alpha);
    }
    if (texCoords) {
        //Debug(String("V::R tc ") + (*texCoords)[0] + ", " + (*texCoords)[1]);
        glTexCoord2d((*texCoords)[0], (*texCoords)[1]);
    }
	////Debug(String("WC V::R ") + (worldCoords)[0] + ", " + (worldCoords)[1] + ", " + (worldCoords)[2]);
	//Debug((String) "V::R " + (coords)[0] + ", " + (coords)[1] + ", " + (coords)[2]);
	glVertex3d((coords)[0], (coords)[1], (coords)[2]);
    //Debug(String("Vertex::Render took ") + (GetMillis() - millis));
}

